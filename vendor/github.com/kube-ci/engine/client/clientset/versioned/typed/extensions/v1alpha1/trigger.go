/*
Copyright 2019 The KubeCI Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kube-ci/engine/apis/extensions/v1alpha1"
	rest "k8s.io/client-go/rest"
)

// TriggersGetter has a method to return a TriggerInterface.
// A group's client should implement this interface.
type TriggersGetter interface {
	Triggers(namespace string) TriggerInterface
}

// TriggerInterface has methods to work with Trigger resources.
type TriggerInterface interface {
	Create(*v1alpha1.Trigger) (*v1alpha1.Trigger, error)
	TriggerExpansion
}

// triggers implements TriggerInterface
type triggers struct {
	client rest.Interface
	ns     string
}

// newTriggers returns a Triggers
func newTriggers(c *ExtensionsV1alpha1Client, namespace string) *triggers {
	return &triggers{
		client: c.RESTClient(),
		ns:     namespace,
	}
}

// Create takes the representation of a trigger and creates it.  Returns the server's representation of the trigger, and an error, if there is any.
func (c *triggers) Create(trigger *v1alpha1.Trigger) (result *v1alpha1.Trigger, err error) {
	result = &v1alpha1.Trigger{}
	err = c.client.Post().
		Namespace(c.ns).
		Resource("triggers").
		Body(trigger).
		Do().
		Into(result)
	return
}
